{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"How To be a PostgreSQL DBA","text":"<p>This repository contains all my DBA KnowHow and is a great list of quick and searchable commands for administrating a database</p> <p>Now to me: \ud83d\udc4b Hi, I\u2019m @dbalucas.</p>"},{"location":"about/","title":"\ud83d\udc4b Hi, I\u2019m @dbalucas","text":"<ul> <li>\ud83d\udc40 I\u2019m interested in Python, HTML, CSS, PostgreSQL, MariaDB, HANA, Oracle, Bash, Linux, MacOS and since some short time in golang</li> <li>\ud83c\udf31 I\u2019m currently learning Python and GoLang</li> <li>\ud83d\udceb How to reach me:</li> <li>Twitter: @DBALucasD</li> <li>Instagram: @dbalucasd</li> <li>Xing: Lucas</li> <li>LinkedIn: Lucas</li> <li>Github: @dbalucas</li> </ul>"},{"location":"license/","title":"Lincense","text":"<p>Due all of the contenct is from an OpenSource Software. Everything I've learned is somewhere from the internet, manual, documenations, https://dba.stackexchange.com/ a.s.o. As well I'd like to mention that much of my commands and knowhow I've learned from reading the <code>PostgreSQL 14 Administration Cookbook</code> <code>ISBN 978-1-80324-897-4</code>, written by Simon Riggs and Gianni Ciolli.</p>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/posts/2023/hello-world/","title":"Hello world","text":""},{"location":"blog/posts/2023/hello-world/#title-my-first-blog-post","title":"title: My First Blog Post","text":"<p>date: 2023-02-12 author: @dbalucas tags:   - Blogging   - MkDocs categories:   - Hello   - World</p>"},{"location":"blog/posts/2023/hello-world/#hello-world","title":"hello world","text":"<p>some content </p>"},{"location":"git_howtos/git_rules/","title":"Git HowTos:","text":""},{"location":"git_howtos/git_rules/#the-7-rules-of-a-great-git-commit-message","title":"The 7 rules of a great git commit message:","text":"<ol> <li>Separate subject from body with a blank line</li> <li>Limit the subject line to 50 characters</li> <li>Capitalize the subject line</li> <li>Do not end the subject line with a periodU</li> <li>se the imperative mood in the subject line</li> <li>Wrap the body at 72 characters</li> <li>Use the body to explain what and why vs. how</li> </ol>"},{"location":"git_howtos/git_rules/#when-to-commit","title":"When to commit:","text":"<ol> <li>I complete a unit of work.</li> <li>I have changes I may want to undo.</li> </ol>"},{"location":"git_howtos/setup_github_pages_mkdocs/","title":"Installation documentation gh-pages with mkdocs","text":"<ol> <li>setup python venv: <code>python3.x -m venv .venv &amp;&amp; source .venv/bin activate</code> </li> <li>update pip: <code>pip install --upgrade pip</code></li> <li>install mkdocs via pip: <code>pip install mkdocs, mkdocs-material, mkdocs-material-extensions, mkdocs-markdownextradata-plugin, mkdocs-blog-plugin</code></li> <li><code>pip freeze &gt;&gt; requirements.txt</code> to more easily update them later or share your setup with others.</li> <li></li> </ol>"},{"location":"troubleshooting/failed_connections/","title":"Troubleshooting failed database connections:","text":"<ul> <li>at first please check that you used the correct parameters!</li> <li>check for explicit rejections. <code>rejects connection for...</code> You're violating the administrators security policies!</li> <li>check of implicit  rejections. <code>no pg_hba.conf entry for ...</code> Contact the administrator to explicitly reject or allow this connection.</li> <li>next try using <code>psql</code> (maybe you're client is badly configured)</li> <li>next use <code>pg_isready</code>-tool. It creates a minimal connection and has different returncodes:</li> <li>server is ready and accepting connection.</li> <li>not accepting connections due to system procedures (start, stop, recover)</li> <li>connection attempt, but failed</li> <li>no connection attempt was made (client problem or out of memory)   -&gt; here the database administrator has to step in:</li> <li>check if server is down</li> <li>check if the server is listening for remote / local connections</li> <li>check if db or user exists</li> <li>check the system log</li> <li>check if you have connected to the <code>MASTER</code> or <code>HOT_STANDBY=ON</code></li> </ul>"},{"location":"troubleshooting/server_uptime/","title":"Display server uptime with SQL","text":"<p>Issue following SQL command to show the database system uptime: <code>SELECT date_trunc('second', current_timestamp - pg_postmaster_start_time()) as uptime;</code></p> <p><code>SELECT pg_postmaster_start_time();</code></p> <p><code>SELECT current_timestamp - pg_postmaster_start_time();</code></p>"}]}